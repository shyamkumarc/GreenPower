{"version":3,"sources":["App.js","nav/Header.jsx","component/SolarForecast.jsx","data/solarData.js","component/MonitorSoloar.jsx","component/WindForecast.jsx","data/windData.js","component/MonitorWind.jsx","nav/Menupage.jsx","component/EnergyDemand.jsx","component/EnergyResources.jsx","component/SolarDashboard.jsx","component/WindDashboard.jsx","index.js"],"names":["live_generation","name","pv","uv","data","date","wind","solar","renderCustomizedSolar","props","x","y","width","value","cx","cy","fill","textAnchor","dominantBaseline","find","d","renderCustomizedWind","monthwise","mg","CustomizedLabel","stroke","dy","fontSize","CustomizedAxisTick","payload","transform","Header","Navbar","className","Container","Brand","href","src","process","alt","Toggle","Collapse","Text","pvforecast","pvgeneration1","pvgeneration2","CustomizedAxisTickPV1","CustomizedLabelPV2","CustomizedAxisTickPV2","SolarForecast","Row","Col","xs","md","LineChart","height","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","tick","YAxis","Tooltip","Legend","Line","type","LabelList","content","BarChart","barSize","vertical","Bar","id","capacity","peak_generation","location","MonitorSolar","Form","FormControl","placeholder","Button","variant","map","datas","ListGroup","defaultActiveKey","to","Item","action","WindForecast","windforecast","CustomizedAxisWind1","CustomizedAxisWind2","MonitorWind","Menupage","useLocation","console","log","splitLocation","pathname","split","as","Accordion","eventKey","Body","EnergyDemand","energy_temp","load","generation","CustomizedLabelNetLoad","EnergyResurces","CardGroup","Card","Title","SolarDashboard","useParams","performaceratio","plant","filter","dataItem","title","allowfullscreen","loading","ResponsiveContainer","ComposedChart","yAxisId","orientation","activeDot","r","WindDashboard","ReactDOM","render","StrictMode","fluid","exact","path","component","document","getElementById"],"mappings":"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AAR,CAAiBR,UAAU,sBAA3B,SACI,eAACD,EAAA,EAAOU,KAAR,WACI,6CACA,yFCdlBC,EAAa,CACf,CACI1C,KAAM,WACNC,GAAI,OAER,CACID,KAAM,WACNC,GAAI,QAMN0C,EAAgB,CAElB,CACI3C,KAAM,QACNC,GAAI,GAGR,CACID,KAAM,QACNC,GAAI,GAGR,CACID,KAAM,QACNC,GAAI,GAGR,CACID,KAAM,QACNC,GAAI,GAGR,CACID,KAAM,QACNC,GAAI,GAGR,CACID,KAAM,QACNC,GAAI,KAER,CACID,KAAM,QACNC,GAAI,KAGR,CACID,KAAM,QACNC,GAAI,KAGR,CACID,KAAM,QACNC,GAAI,KAGR,CACID,KAAM,QACNC,GAAI,MAER,CACID,KAAM,QACNC,GAAI,KAER,CACID,KAAM,QACNC,GAAI,KAER,CACID,KAAM,QACNC,GAAI,KAER,CACID,KAAM,QACNC,GAAI,KAER,CACID,KAAM,QACNC,GAAI,GAER,CACID,KAAM,QACNC,GAAI,IAIN2C,EAAgB,CAClB,CACI5C,KAAM,QACNC,GAAI,GAGR,CACID,KAAM,QACNC,GAAI,GAGR,CACID,KAAM,QACNC,GAAI,GAGR,CACID,KAAM,QACNC,GAAI,GAGR,CACID,KAAM,QACNC,GAAI,GAGR,CACID,KAAM,QACNC,GAAI,KAER,CACID,KAAM,QACNC,GAAI,KAGR,CACID,KAAM,QACNC,GAAI,KAGR,CACID,KAAM,QACNC,GAAI,KAGR,CACID,KAAM,QACNC,GAAI,MAER,CACID,KAAM,QACNC,GAAI,KAER,CACID,KAAM,QACNC,GAAI,KAER,CACID,KAAM,QACNC,GAAI,KAER,CACID,KAAM,QACNC,GAAI,KAER,CACID,KAAM,QACNC,GAAI,GAER,CACID,KAAM,QACNC,GAAI,IAINsB,EAAkB,SAACf,GACrB,IAAQC,EAAwBD,EAAxBC,EAAGC,EAAqBF,EAArBE,EAAGc,EAAkBhB,EAAlBgB,OAAQZ,EAAUJ,EAAVI,MAEtB,OACI,sBAAMH,EAAGA,EAAGC,EAAGA,EAAGe,IAAK,EAAGV,KAAMS,EAAQE,SAAU,GA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","file":"static/js/main.27f090e6.chunk.js","sourcesContent":["import React from \"react\";\nimport { Col, Row, Container } from \"react-bootstrap\"\n\nimport {\n  BarChart,\n  Bar,\n  LabelList,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  Line,\n  LineChart\n} from \"recharts\";\n\n//Live Generation data\nconst live_generation = [\n  {\n    name: \"01:00\",\n    pv: 480,\n    uv: 1500,\n  },\n  {\n    name: \"02:00\",\n    pv: 720,\n    uv: 1500,\n  },\n  {\n    name: \"03:00\",\n    pv: 900,\n    uv: 1650,\n  },\n  {\n    name: \"04:00\",\n    pv: 1680,\n    uv: 700,\n  },\n  {\n    name: \"05:00\",\n    pv: 1211,\n    uv: 1690,\n  },\n  {\n    name: \"06:00\",\n    pv: 1141,\n    uv: 1750,\n  },\n  {\n    name: \"07:00\",\n    pv: 1061,\n    uv: 1932,\n  },\n  {\n    name: \"08:00\",\n    pv: 1291,\n    uv: 1581,\n\n  },\n  {\n    name: \"09:00\",\n    pv: 1750,\n    uv: 1932,\n  },\n  {\n    name: \"10:00\",\n    pv: 2032,\n    uv: 1750,\n  },\n  {\n    name: \"11:00\",\n    pv: 2430,\n    uv: 1850,\n  },\n  {\n    name: \"12:00\",\n    pv: 2610,\n    uv: 2000,\n  },\n  {\n    name: \"13:00\",\n    pv: 3100,\n    uv: 2040,\n  },\n  {\n    name: \"14:00\",\n    pv: 3241,\n    uv: 2040,\n\n  },\n  {\n    name: \"15:00\",\n    pv: 3500,\n    uv: 2040,\n  },\n  {\n\n  }\n];\n\n\n\nconst data = [\n  {\n    date: \"2018\",\n    wind: 9,\n    solar: 14,\n    // amt: 2400\n  },\n  {\n    date: \"2019\",\n    wind: 12,\n    solar: 16,\n    // amt: 2210\n  },\n  {\n    date: \"2020\",\n    wind: 14,\n    solar: 19,\n    // amt: 2290\n  },\n  {\n    date: \"2021\",\n    wind: 15,\n    solar: 22,\n    // amt: 2000\n  }\n];\nconst renderCustomizedSolar = (props) => {\n  const { x, y, width, value } = props;\n  return (\n    <g>\n      <circle cx={x + width / 2} cy={y} fill=\"black\" />\n      <text\n        x={x + width / 2}\n        y={y}\n        fill=\"black\"\n        textAnchor=\"middle\"\n        dominantBaseline=\"top\"\n      >\n        {data.find((d) => d.date === value)?.solar}\n      </text>\n    </g>\n  );\n};\n\nconst renderCustomizedWind = (props) => {\n  const { x, y, width, value } = props;\n  return (\n    <g>\n      <circle cx={x + width / 2} cy={y} fill=\"black\" />\n      <text\n        x={x + width / 2}\n        y={y}\n        fill=\"black\"\n        textAnchor=\"middle\"\n        dominantBaseline=\"top\"\n      >\n        {data.find((d) => d.date === value)?.wind}\n      </text>\n    </g>\n  );\n};\n\n\n// const monthTickFormatter = (tick) => {\n//   const date = new Date(tick);\n\n//   return date.getMonth() + 1;\n// };\n\n\n//Mothwise Generation Chart\nconst monthwise = [\n  {\n\n  },\n  {\n    name: \"Oct\",\n    mg: 30,\n\n  },\n  {\n    name: \"Nov\",\n    mg: 28,\n\n  },\n  {\n    name: \"Dec\",\n    mg: 27,\n\n  },\n  {\n    name: \"Jan\",\n    mg: 27,\n\n  },\n  {\n    name: \"Feb\",\n    mg: 28,\n\n  },\n  {\n    name: \"Mar\",\n    mg: 29\n  },\n  {\n    name: \"Apr\",\n    mg: 30\n\n  },\n  {\n    name: \"May\",\n    mg: 32\n\n  },\n  {\n    name: \"Jun\",\n    mg: 33\n\n  },\n  {\n    name: \"July\",\n    mg: 34\n  },\n  {\n    name: \"Aug\",\n    mg: 33\n  },\n  {\n    name: \"Sep\",\n    mg: 25\n  }\n\n];\n\nconst CustomizedLabel = (props) => {\n  const { x, y, stroke, value } = props;\n\n  return (\n    <text x={x} y={y} dy={-4} fill={stroke} fontSize={10} textAnchor=\"middle\">\n      {value}\n    </text>\n  );\n};\n\nconst CustomizedAxisTick = (props) => {\n  const { x, y, payload } = props;\n  return (\n    <g transform={`translate(${x},${y})`}>\n      <text\n        x={0}\n        y={0}\n        dy={16}\n        textAnchor=\"end\"\n        fill=\"#666\"\n        transform=\"rotate(-35)\"\n      >\n        {payload.value}\n      </text>\n    </g>\n  );\n};\n\n\n\nexport default function App() {\n  return (\n\n    <>\n      <Container>\n        <Row>\n          <Col xs={6}>\n            <h2>Live Generation - 3495 MW</h2>\n            <h4>PV Generation Today</h4>\n            <LineChart\n              width={500}\n              height={300}\n              data={live_generation}\n              margin={{\n                top: 5,\n                right: 30,\n                left: 0,\n                bottom: 5\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" height={60} tick={<CustomizedAxisTick />} />\n              <YAxis name=\"2nd Y-Axis\" />\n              <Tooltip />\n              <Legend />\n              <Line type=\"monotone\" name=\"Actual\" dataKey=\"pv\" stroke=\"#4068CE\">\n                <LabelList content={<CustomizedLabel />} />\n              </Line>\n              <Line type=\"monotone\" name=\"Forecast\" dataKey=\"uv\" stroke=\"#FFA114\">\n                <LabelList content={<CustomizedLabel />} />\n              </Line>\n            </LineChart>\n          </Col>\n\n          <Col >\n            <h5>Installed Capacity PV - 22 GV</h5>\n            <h5>Installed Capacity Wind - 15 GV</h5>\n            <h4>Installed Capacity(GV)</h4>\n\n            <BarChart\n              width={300}\n              height={300}\n              data={data}\n              margin={{\n                top: 5,\n                right: 30,\n                left: 0,\n                bottom: 5\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"date\" />\n\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"solar\" name=\"Solar\" fill=\"#FFA114\">\n                <LabelList dataKey=\"date\" content={renderCustomizedSolar} />\n\n              </Bar>\n              <Bar dataKey=\"wind\" name=\"Wind\" fill=\"#0C67CE\" >\n                <LabelList dataKey=\"date\" content={renderCustomizedWind} />\n\n              </Bar>\n            </BarChart>\n            <h6>Forecasted PV Peak Generation - 2150 MV</h6>\n            <h6>Forecasted Wind Peak generation - 950 MV</h6>\n          </Col>\n\n          <Col>\n            <h4>Current Weather</h4>\n            <h3>24°C</h3>\n            <h5>Solar Power</h5><br/>\n            <h3>20.0</h3>\n            <h3>W/m2</h3>\n            <sub>*Based on a 4kWp PV array</sub>\n            <p>Last update: 0 days ago</p>\n            <h5>Avoided Emmisions</h5>\n            <h5>36.5 Million Tones CO<sub>2</sub></h5>\n          </Col>\n        </Row>\n      </Container>\n      <Container>\n        <Row>\n          <Col >\n            <h4>PV Generation Today</h4>\n            <LineChart\n              width={500}\n              height={300}\n              data={live_generation}\n              margin={{\n                top: 5,\n                right: 30,\n                left: 0,\n                bottom: 5\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" height={60} tick={<CustomizedAxisTick />} />\n              <YAxis  />\n              <Tooltip />\n              <Legend />\n              <Line type=\"monotone\" name=\"Actual\" dataKey=\"pv\" stroke=\"#4068CE\">\n                <LabelList content={<CustomizedLabel />} />\n              </Line>\n              <Line type=\"monotone\" name=\"Forecast\" dataKey=\"uv\" stroke=\"#FFA114\">\n                <LabelList content={<CustomizedLabel />} />\n              </Line>\n            </LineChart>\n          </Col>\n\n          <Col>\n            <h4>Monthwise Generation</h4>\n            <LineChart\n              width={400}\n              height={300}\n              data={monthwise}\n              margin={{\n                top: 20,\n                right: 30,\n                left: 0,\n                bottom: 10\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" height={60} tick={<CustomizedAxisTick />} />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n\n              <Line type=\"monotone\" dataKey=\"mg\" stroke=\"#4068CE\">\n                <LabelList content={<CustomizedLabel />} />\n              </Line>\n            </LineChart>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\n","// import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Navbar, Container } from \"react-bootstrap\"\n\nconst Header = () => {\n    return (\n        <Navbar className=\"header-page\">\n            <Container>\n                <Navbar.Brand href=\"/greenPower\">         \n                   <img className=\"d-inline-block align-top\"\n                        src={process.env.PUBLIC_URL + '/logo.png'} \n                        alt=\"logo\" />\n                </Navbar.Brand>\n                <Navbar.Toggle />\n                <Navbar.Collapse className=\"justify-content-end\">\n                    <Navbar.Text>\n                        <h1>Green Power</h1>\n                        <h6>Helping Utilities Transition to Clean Energy</h6>\n                    </Navbar.Text>\n                </Navbar.Collapse>\n            </Container>\n            \n        </Navbar>\n    )\n\n\n}\n\nexport default Header","import { Col, Row } from \"react-bootstrap\"\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, CartesianGrid, Line, LineChart, Legend, LabelList } from \"recharts\";\n\nconst pvforecast = [\n    {\n        name: \"PV - T+3\",\n        pv: 15600\n    },\n    {\n        name: \"PV - T+4\",\n        pv: 14800\n    },\n\n];\n\n//PV Generation Chart\nconst pvgeneration1 = [\n\n    {\n        name: \"01:00\",\n        pv: 0,\n\n    },\n    {\n        name: \"01:03\",\n        pv: 0,\n\n    },\n    {\n        name: \"02:00\",\n        pv: 0,\n\n    },\n    {\n        name: \"02:30\",\n        pv: 0,\n\n    },\n    {\n        name: \"03:00\",\n        pv: 0,\n\n    },\n    {\n        name: \"03:30\",\n        pv: 350\n    },\n    {\n        name: \"04:00\",\n        pv: 500\n\n    },\n    {\n        name: \"04:30\",\n        pv: 650\n\n    },\n    {\n        name: \"05:00\",\n        pv: 941\n\n    },\n    {\n        name: \"05:30\",\n        pv: 1120\n    },\n    {\n        name: \"06:00\",\n        pv: 950\n    },\n    {\n        name: \"06:30\",\n        pv: 670\n    },\n    {\n        name: \"07:00\",\n        pv: 500\n    },\n    {\n        name: \"07:30\",\n        pv: 300\n    },\n    {\n        name: \"08:00\",\n        pv: 0\n    },\n    {\n        name: \"08:30\",\n        pv: 0\n    },\n];\n\nconst pvgeneration2 = [\n    {\n        name: \"01:00\",\n        pv: 0,\n\n    },\n    {\n        name: \"01:03\",\n        pv: 0,\n\n    },\n    {\n        name: \"02:00\",\n        pv: 0,\n\n    },\n    {\n        name: \"02:30\",\n        pv: 0,\n\n    },\n    {\n        name: \"03:00\",\n        pv: 0,\n\n    },\n    {\n        name: \"03:30\",\n        pv: 431\n    },\n    {\n        name: \"04:00\",\n        pv: 631\n\n    },\n    {\n        name: \"04:30\",\n        pv: 761\n\n    },\n    {\n        name: \"05:00\",\n        pv: 911\n\n    },\n    {\n        name: \"05:30\",\n        pv: 1011\n    },\n    {\n        name: \"06:00\",\n        pv: 810\n    },\n    {\n        name: \"06:30\",\n        pv: 670\n    },\n    {\n        name: \"07:00\",\n        pv: 420\n    },\n    {\n        name: \"07:30\",\n        pv: 270\n    },\n    {\n        name: \"08:00\",\n        pv: 0\n    },\n    {\n        name: \"08:30\",\n        pv: 0\n    },\n];\n\nconst CustomizedLabel = (props) => {\n    const { x, y, stroke, value } = props;\n\n    return (\n        <text x={x} y={y} dy={-4} fill={stroke} fontSize={10} textAnchor=\"left\">\n            {value}\n        </text>\n    );\n};\n\nconst renderCustomizedWind = (props) => {\n    const { x, y, width, value } = props;\n    return (\n      <g>\n        <circle cx={x + width / 2} cy={y} fill=\"black\" />\n        <text\n          x={x + width / 2}\n          y={y}\n          fill=\"black\"\n          textAnchor=\"middle\"\n          dominantBaseline=\"top\"\n        >\n          {pvforecast.find((d) => d.name === value)?.pv}\n        </text>\n      </g>\n    );\n  };\n\nconst CustomizedAxisTickPV1 = (props) => {\n    const { x, y, payload } = props;\n\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <text\n                x={0}\n                y={0}\n                dy={16}\n                textAnchor=\"end\"\n                fill=\"#666\"\n                transform=\"rotate(-35)\"\n            >\n                {payload.value}\n            </text>\n        </g>\n    );\n};\n\nconst CustomizedLabelPV2 = (props) => {\n    const { x, y, stroke, value } = props;\n  \n    return (\n      <text x={x} y={y} dy={-4} fill={stroke} fontSize={10} textAnchor=\"middle\">\n        {value}\n      </text>\n    );\n  };\n  \n  const CustomizedAxisTickPV2 = (props) => {\n    const { x, y, payload } = props;\n  \n    return (\n      <g transform={`translate(${x},${y})`}>\n        <text\n          x={0}\n          y={0}\n          dy={16}\n          textAnchor=\"end\"\n          fill=\"#666\"\n          transform=\"rotate(-35)\"\n        >\n          {payload.value}\n        </text>\n      </g>\n    );\n  };\n\n\nconst SolarForecast = () => {\n    return (\n        <>\n            <Row>\n                <Col xs={12} md={8}>\n                    <h3>PV Generation T+1</h3>\n                    <LineChart\n                        width={600}\n                        height={300}\n                        data={pvgeneration1}\n                        margin={{\n                            top: 20,\n                            right: 30,\n                            left: 0,\n                            bottom: 10\n                        }}\n                    >\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"name\" height={60} tick={<CustomizedAxisTickPV1 />} />\n                        <YAxis />\n                        <Tooltip />\n                        <Legend />\n\n                        <Line type=\"monotone\" name=\"forecast\" dataKey=\"pv\" stroke=\"#EEB183\"> \n                        <LabelList content={<CustomizedLabel />} />\n                        </Line>\n                    </LineChart>\n                </Col>\n                <Col xs={6} md={4}>\n                    <h3>PV Forecaste(MWh) - 3days</h3>\n                    <BarChart width={250} height={250} data={pvforecast} barSize={55}>\n                        <XAxis dataKey=\"name\" />\n                        <CartesianGrid vertical={false} />\n                        <YAxis />\n                        <Tooltip />\n                        <Bar name=\"PV\" dataKey=\"pv\" fill=\"#EEB183\" >\n                        <LabelList dataKey=\"name\" content={renderCustomizedWind} />\n\n                            </Bar>\n                    </BarChart>\n                </Col>\n            </Row>\n            <Row>\n                <Col xs={12} md={8}>\n                    <h3>PV Generation T+2</h3>\n                    <LineChart\n                        width={600}\n                        height={300}\n                        data={pvgeneration2}\n                        margin={{\n                            top: 20,\n                            right: 30,\n                            left: 0,\n                            bottom: 10\n                        }}\n                    >\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"name\" height={60} tick={<CustomizedAxisTickPV2 />} />\n                        <YAxis />\n                        <Tooltip />\n                        <Legend />\n                        <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#EEB183\">\n                            <LabelList content={<CustomizedLabelPV2 />} />\n                        </Line>\n                    </LineChart>\n                 \n\n\n                </Col>\n            </Row>\n        </>\n    )\n}\nexport default SolarForecast;\n\n","const  data = [{\r\n    id: 1,\r\n    name: \"Bhadla Solar Park, Rajasthan\",\r\n    capacity: \"150MW\",\r\n    peak_generation: \"89MW\",\r\n    location: \"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d7308190.07374474!2d69.37647972366301!3d26.56986127897766!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x396a3efaf7e30e37%3A0xb52b9b4506c088e5!2sRajasthan!5e0!3m2!1sen!2sin!4v1633427221617!5m2!1sen!2sin\"\r\n},{\r\n    id: 2,\r\n    name: \"Pavagada Solar Park, Karnataka\",\r\n    capacity: \"350MW\",\r\n    peak_generation: \"290MW\",\r\n    location : \"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d7893324.417860208!2d71.81766028814265!3d14.983692396505225!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3ba35a4c37bf488f%3A0x41f1d28cd1757cd5!2sKarnataka!5e0!3m2!1sen!2sin!4v1633427449163!5m2!1sen!2sin\"\r\n},{\r\n    id: 3,\r\n    name: \"Kurnool Ultra Mega Solar Park, Andhra Pradesh\",\r\n    capacity: \"100MW\",\r\n    peak_generation: \"100MW\",\r\n    location : \"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d7860838.953004828!2d76.2769628503478!3d15.840808031689336!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3a3546f8ae93d47f%3A0x33d1bbbe95adcd83!2sAndhra%20Pradesh!5e0!3m2!1sen!2sin!4v1633427313365!5m2!1sen!2sin\"\r\n},{\r\n    id: 4,\r\n    name: \"Rewa Ultra Mega Solar, Madhya Pradesh\",\r\n    capacity: \"260MW\",\r\n    peak_generation: \"50MW\",\r\n    location: \"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d7469433.299879!2d73.92479774066334!3d23.91852958669439!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x39667381d35aea05%3A0xe0106b0d4e701c1e!2sMadhya%20Pradesh!5e0!3m2!1sen!2sin!4v1633427413935!5m2!1sen!2sin\"\r\n}\r\n\r\n];\r\n\r\nexport default data;","import { Form, FormControl, Button, ListGroup, Row, Col } from \"react-bootstrap\"\nimport {Link } from \"react-router-dom\"\nimport data from '../data/solarData'\n\nconst MonitorSolar = () => {\n    \n    return (\n        <>\n            <Row>\n                <Col>\n                    <Form className=\"d-flex\">\n                        <FormControl\n                            type=\"search\"\n                            placeholder=\"Search\"\n                            className=\"mr-2\"\n                            aria-label=\"Search\"\n                        />\n                        <Button variant=\"outline-success\">Search</Button>\n                    </Form>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                {data.map(datas => \n                <ListGroup id=\"monitorlist\" defaultActiveKey={datas.id}>\n                <Link to={'/solardashboard/'+datas.id}>\n\n                    {/* <ListGroup.Item  action href={'/solardashboard/'+datas.id}> */}\n                    <ListGroup.Item  action >\n\n                        <h1>{datas.name}</h1>\n                        <h5>Capacity: {datas.capacity}</h5>\n                        <h5>Peak Generation:{datas.peak_generation}</h5>\n                       \n                    </ListGroup.Item>\n                    </Link>\n                    </ListGroup>\n\n                    )}\n                    {/* <ListGroup.Item  action href=\"#link2\">\n                        Link 2\n                    </ListGroup.Item>\n                    <ListGroup.Item  action href=\"#link3\" >\n                        This one is a button\n                    </ListGroup.Item> */}\n                </Col>\n\n            </Row>\n\n        </>\n    )\n}\nexport default MonitorSolar;","import { Row, Col } from \"react-bootstrap\";\nimport { LineChart, LabelList, Bar, BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Line } from \"recharts\";\nconst WindForecast = () => {\n\n    const windgeneration1 = [\n        {\n            name: \"01:00\",\n            pv: 400,\n\n        },\n        {\n            name: \"01:03\",\n            pv: 350,\n\n        },\n        {\n            name: \"02:00\",\n            pv: 850,\n\n        },\n        {\n            name: \"02:30\",\n            pv: 900,\n\n        },\n        {\n            name: \"03:00\",\n            pv: 750,\n\n        },\n        {\n            name: \"03:30\",\n            pv: 640\n        },\n        {\n            name: \"04:00\",\n            pv: 760\n\n        },\n        {\n            name: \"04:30\",\n            pv: 780\n\n        },\n        {\n            name: \"05:00\",\n            pv: 820\n\n        },\n        {\n            name: \"05:30\",\n            pv: 860\n        },\n        {\n            name: \"06:00\",\n            pv: 790\n        },\n        {\n            name: \"06:30\",\n            pv: 700\n        },\n        {\n            name: \"07:00\",\n            pv: 1000\n        },\n        {\n            name: \"07:30\",\n            pv: 1100\n        },\n        {\n            name: \"08:00\",\n            pv: 1200\n        },\n        {\n            name: \"08:30\",\n            pv: 1100\n        }, {\n            name: \"09:00\",\n            pv: 950\n        },\n    ];\n\n    const windforecast = [\n        {\n            name: \"Wind - T+3\",\n            wind: 14200\n        },\n        {\n            name: \"Wind - T+4\",\n            wind: 16300\n        },\n\n    ];\n\n    const windgeneration2 = [\n        {\n            name: \"01:00\",\n            pv: 400,\n\n        },\n        {\n            name: \"01:03\",\n            pv: 350,\n\n        },\n        {\n            name: \"02:00\",\n            pv: 850,\n\n        },\n        {\n            name: \"02:30\",\n            pv: 900,\n\n        },\n        {\n            name: \"03:00\",\n            pv: 750,\n\n        },\n        {\n            name: \"03:30\",\n            pv: 640\n        },\n        {\n            name: \"04:00\",\n            pv: 760\n\n        },\n        {\n            name: \"04:30\",\n            pv: 780\n\n        },\n        {\n            name: \"05:00\",\n            pv: 820\n\n        },\n        {\n            name: \"05:30\",\n            pv: 860\n        },\n        {\n            name: \"06:00\",\n            pv: 790\n        },\n        {\n            name: \"06:30\",\n            pv: 700\n        },\n        {\n            name: \"07:00\",\n            pv: 1000\n        },\n        {\n            name: \"07:30\",\n            pv: 1100\n        },\n        {\n            name: \"08:00\",\n            pv: 1200\n        },\n        {\n            name: \"08:30\",\n            pv: 1100\n        }, {\n            name: \"09:00\",\n            pv: 950\n        },\n    ];\n\n    const CustomizedLabel = (props) => {\n        const { x, y, stroke, value } = props;\n      \n        return (\n          <text x={x} y={y} dy={-4} fill={stroke} fontSize={10} textAnchor=\"middle\">\n            {value}\n          </text>\n        );\n      };\n    const CustomizedAxisWind1 = (props) => {\n        const { x, y, payload } = props;\n\n        return (\n            <g transform={`translate(${x},${y})`}>\n                <text\n                    x={0}\n                    y={0}\n                    dy={16}\n                    textAnchor=\"end\"\n                    fill=\"#666\"\n                    transform=\"rotate(-35)\"\n                >\n                    {payload.value}\n                </text>\n            </g>\n        );\n    };const CustomizedAxisWind2 = (props) => {\n        const { x, y, payload } = props;\n\n        return (\n            <g transform={`translate(${x},${y})`}>\n                <text\n                    x={0}\n                    y={0}\n                    dy={16}\n                    textAnchor=\"end\"\n                    fill=\"#666\"\n                    transform=\"rotate(-35)\"\n                >\n                    {payload.value}\n                </text>\n            </g>\n        );\n    };\n    const renderCustomizedWind = (props) => {\n        const { x, y, width, value } = props;\n        return (\n          <g>\n            <circle cx={x + width / 2} cy={y} fill=\"black\" />\n            <text\n              x={x + width / 2}\n              y={y}\n              fill=\"black\"\n              textAnchor=\"middle\"\n              dominantBaseline=\"top\"\n            >\n              {windforecast.find((d) => d.name === value)?.wind}\n            </text>\n          </g>\n        );\n      };\n      \n\n\n\n    return (\n        <>\n            <Row>\n                <Col xs={12} md={8}>\n                    <h3>Wind Generation T+1</h3>\n                    <LineChart\n                        width={600}\n                        height={300}\n                        data={windgeneration1}\n                        margin={{\n                            top: 20,\n                            right: 30,\n                            left: 0,\n                            bottom: 10\n                        }}\n                    >\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"name\" height={60} tick={<CustomizedAxisWind1 />} />\n                        <YAxis />\n                        <Tooltip />\n                        <Legend />\n\n                        <Line name=\"Generation(MW)\" type=\"monotone\" dataKey=\"pv\" stroke=\"#E7823B\">\n                        <LabelList content={<CustomizedLabel />} />\n\n                    </Line>\n                    </LineChart>\n                </Col>\n                <Col xs={6} md={4}>\n                    <h3>Wind Forecaste(MWh) - 3days</h3>\n                    <BarChart width={250} height={250} data={windforecast} barSize={30}>\n                        <XAxis dataKey=\"name\" />\n                        <CartesianGrid vertical={false} />\n                        <YAxis />\n                        <Tooltip />\n                        <Bar dataKey=\"wind\" fill=\"#767171\">\n                        <LabelList dataKey=\"name\" content={renderCustomizedWind} />\n\n                            </Bar>\n                    </BarChart>\n                </Col>\n            </Row>\n            <Row>\n            <Col xs={12} md={8}>\n                    <h3>Wind Generation T+2</h3>\n                    <LineChart\n                        width={600}\n                        height={300}\n                        data={windgeneration2}\n                        margin={{\n                            top: 20,\n                            right: 30,\n                            left: 0,\n                            bottom: 10\n                        }}\n                    >\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"name\" height={60} tick={<CustomizedAxisWind2 />} />\n                        <YAxis />\n                        <Tooltip />\n                        <Legend />\n\n                        <Line name=\"Generation(MW)\" type=\"monotone\" dataKey=\"pv\" stroke=\"#E7823B\">\n                        <LabelList content={<CustomizedLabel />} />\n\n                            </Line>\n                    </LineChart>\n                </Col>\n            </Row>\n        </>\n    )\n}\nexport default WindForecast;","const  data = [{\r\n    id: 1,\r\n    name: \"Muppandal wind farm, Tamil Nadu\",\r\n    capacity: \"110MW\",\r\n    peak_generation: \"40MW\",\r\n    location: \"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d4013472.107355065!2d76.04324088427373!3d10.780156848457207!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3b00c582b1189633%3A0x559475cc463361f0!2sTamil%20Nadu!5e0!3m2!1sen!2sin!4v1633426738193!5m2!1sen!2sin\" \r\n}, {\r\n    id: 2,\r\n    name: \"Jaisalmer Wind Park , Rajasthan\",\r\n    capacity: \"20MW\",\r\n    peak_generation: \"12MW\",\r\n    location: \"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d7308190.07374474!2d69.37647972366301!3d26.56986127897766!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x396a3efaf7e30e37%3A0xb52b9b4506c088e5!2sRajasthan!5e0!3m2!1sen!2sin!4v1633427221617!5m2!1sen!2sin\"\r\n}, {\r\n    id: 3,\r\n    name: \"Brahmanvel wind farm, Maharashtra\",\r\n    capacity: \"100MW\",\r\n    peak_generation: \"65MW\",\r\n    location: \"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d7736499.982678703!2d72.27573140414904!3d18.77193659493283!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3bcfc41e9c9cd6f9%3A0x1b2f22924be04fb6!2sMaharashtra!5e0!3m2!1sen!2sin!4v1633427271605!5m2!1sen!2sin\"\r\n}, {\r\n    id: 4,\r\n    name: \"Beluguppa Wind Park , Andra pradesh\",\r\n    capacity: \"105MW\",\r\n    peak_generation: \"50MW\",\r\n    location : \"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d7860838.953004828!2d76.2769628503478!3d15.840808031689336!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3a3546f8ae93d47f%3A0x33d1bbbe95adcd83!2sAndhra%20Pradesh!5e0!3m2!1sen!2sin!4v1633427313365!5m2!1sen!2sin\"\r\n}\r\n\r\n];\r\n\r\nexport default data;","import { Form, FormControl, Button, ListGroup, Row, Col } from \"react-bootstrap\"\nimport { Link } from \"react-router-dom\"\nimport data from '../data/windData'\n\nconst MonitorWind = () => {\n    \n\n    return (\n        <>\n            <Row>\n                <Col>\n                    <Form className=\"d-flex\">\n                        <FormControl\n                            type=\"search\"\n                            placeholder=\"Search\"\n                            className=\"mr-2\"\n                            aria-label=\"Search\"\n                        />\n                        <Button variant=\"outline-success\">Search</Button>\n                    </Form>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    {data.map(datas =>\n                        <ListGroup id=\"monitorlist\" defaultActiveKey={datas.id}>\n                            <Link to={'/winddashboard/' + datas.id}>\n                                <ListGroup.Item action >\n\n                                    <h1>{datas.name}</h1>\n                                    <h5>Capacity: {datas.capacity}</h5>\n                                    <h5>Peak Generation:{datas.peak_generation}</h5>\n\n                                </ListGroup.Item>\n                            </Link>\n                        </ListGroup>\n                    )}\n                </Col>\n\n            </Row>\n\n        </>\n    )\n}\nexport default MonitorWind;","// import 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Col, Accordion, ListGroup } from \"react-bootstrap\"\n\nconst Menupage = () => {\n  //assigning location variable\n  const location = useLocation();\n  console.log(location)\n\n  //destructuring pathname from location\n  const { pathname } = location;\n\n  //Javascript split method to get the name of the path in array\n  const splitLocation = pathname.split(\"/\");\n  return (\n\n    <Col>\n\n      <ListGroup as=\"ul\">\n        <ListGroup.Item as=\"li\" className={splitLocation[1] === \"\" ? \"active\" : \"\"} >\n          <Link to='/greenPower'>Home</Link>\n        </ListGroup.Item>\n\n        <Accordion>\n          <Accordion.Item eventKey=\"0\">\n            <Accordion.Header>Solar</Accordion.Header>\n            <Accordion.Body>\n              <ListGroup.Item as=\"li\" className={splitLocation[1] === \"solarforecast\" ? \"active\" : \"\"}>\n                <Link to='/solarforecast'>Solar Generation Forecast</Link>\n              </ListGroup.Item>\n              <ListGroup.Item as=\"li\" className={splitLocation[1] === \"monitorsolar\" ? \"active\" : \"\"}>\n                <Link to='/monitorsolar'>Monitor Solar Farm</Link>\n              </ListGroup.Item>\n            </Accordion.Body>\n          </Accordion.Item>\n        </Accordion>\n\n        <Accordion>\n          <Accordion.Item eventKey=\"0\">\n            <Accordion.Header>Wind</Accordion.Header>\n            <Accordion.Body>\n              <ListGroup.Item as=\"li\" className={splitLocation[1] === \"windforecast\" ? \"active\" : \"\"}>\n\n                <Link to='/windforecast'>Wind Generation Forecast</Link>\n              </ListGroup.Item>\n              <ListGroup.Item as=\"li\" className={splitLocation[1] === \"monitorwind\" ? \"active\" : \"\"}>\n\n                <Link to='/monitorwind'>Monitor Wind Farm</Link>\n              </ListGroup.Item>\n\n            </Accordion.Body>\n          </Accordion.Item>\n        </Accordion>\n\n        <ListGroup.Item as=\"li\" className={splitLocation[1] === \"energydemand\" ? \"active\" : \"\"}>\n          <Link to='/energydemand'>Energy Demand</Link>\n        </ListGroup.Item>\n        <ListGroup.Item as=\"li\" className={splitLocation[1] === \"energyresources\" ? \"active\" : \"\"}>\n          <Link to='/energyresources'>Distributed Energy Resources</Link>\n\n        </ListGroup.Item>\n      </ListGroup>\n\n\n   </Col>\n\n\n  )\n}\n\nexport default Menupage;\n\n\n\n","import { Row, Col } from \"react-bootstrap\";\nimport { LineChart, BarChart, LabelList, Bar, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Line } from \"recharts\";\nconst EnergyDemand = () => {\n\n    const energy_temp = [\n        {\n            name: \"01:00\",\n            pv: 480,\n            uv: 1500,\n        },\n        {\n            name: \"02:00\",\n            pv: 720,\n            uv: 1500,\n        },\n        {\n            name: \"03:00\",\n            pv: 900,\n            uv: 1650,\n        },\n        {\n            name: \"04:00\",\n            pv: 1680,\n            uv: 700,\n        },\n        {\n            name: \"05:00\",\n            pv: 1211,\n            uv: 1690,\n        },\n        {\n            name: \"06:00\",\n            pv: 1141,\n            uv: 1750,\n        },\n        {\n            name: \"07:00\",\n            pv: 1061,\n            uv: 1932,\n        },\n        {\n            name: \"08:00\",\n            pv: 1291,\n            uv: 1581,\n\n        },\n        {\n            name: \"09:00\",\n            pv: 1750,\n            uv: 1932,\n        },\n        {\n            name: \"10:00\",\n            pv: 2032,\n            uv: 1750,\n        },\n        {\n            name: \"11:00\",\n            pv: 2430,\n            uv: 1850,\n        },\n        {\n            name: \"12:00\",\n            pv: 2610,\n            uv: 2000,\n        },\n        {\n            name: \"13:00\",\n            pv: 3100,\n            uv: 2040,\n        },\n        {\n            name: \"14:00\",\n            pv: 3241,\n            uv: 2040,\n\n        },\n        {\n            name: \"15:00\",\n            pv: 3500,\n            uv: 2040,\n        },\n        {\n\n        }\n    ];\n\n    const data = [\n        {\n            name: \"T+2\",\n            load: 98450,\n            generation: 72463,\n        },\n        {\n            name: \"T+3\",\n            load: 96450,\n            generation: 75631,\n        }\n\n\n    ];\n\n    const CustomizedLabelNetLoad = (props) => {\n        const { x, y, stroke, value } = props;\n\n        return (\n            <text x={x} y={y} dy={-4} fill={stroke} fontSize={10} textAnchor=\"middle\">\n                {value}\n            </text>\n        );\n    };\n\n    const renderCustomizedLabel = (props) => {\n        const { x, y, width, value } = props;\n        return (\n            <g>\n                <circle cx={x + width / 2} cy={y} fill=\"black\" />\n                <text\n                    x={x + width / 2}\n                    y={y}\n                    fill=\"black\"\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"top\"\n                >\n                    {data.find((d) => d.name === value)?.load}\n                </text>\n            </g>\n        );\n    };\n\n    const renderCustomizedEvetLabel = (props) => {\n        const { x, y, width, value } = props;\n        return (\n            <g>\n                <circle cx={x + width / 2} cy={y} fill=\"black\" />\n                <text\n                    x={x + width / 2}\n                    y={y}\n                    fill=\"black\"\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"top\"\n                >\n                    {data.find((d) => d.name === value)?.generation}\n                </text>\n            </g>\n        );\n    };\n\n    const CustomizedAxisTick = (props) => {\n        const { x, y, payload } = props;\n        return (\n            <g transform={`translate(${x},${y})`}>\n                <text\n                    x={0}\n                    y={0}\n                    dy={16}\n                    textAnchor=\"end\"\n                    fill=\"#666\"\n                    transform=\"rotate(-35)\"\n                >\n                    {payload.value}\n                </text>\n            </g>\n        );\n    };\n\n    return (\n        <>\n            <Row>\n                <Col >\n                    <LineChart\n                        width={800}\n                        height={300}\n                        data={energy_temp}\n                        margin={{\n                            top: 5,\n                            right: 30,\n                            left: 20,\n                            bottom: 5\n                        }}\n                    >\n\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"name\" height={60} tick={<CustomizedAxisTick />} />\n                        <YAxis />\n                        <Tooltip />\n                        <Legend />\n                        <Line type=\"monotone\" name=\"Total RE Generation\" dataKey=\"pv\" stroke=\"#8884d8\">\n                            <LabelList content={<CustomizedLabelNetLoad />} />\n                        </Line>\n                        <Line type=\"monotone\" name=\"Aggregate Load\" dataKey=\"uv\" stroke=\"#82ca9d\">\n                            <LabelList content={<CustomizedLabelNetLoad />} />\n                        </Line>\n                    </LineChart>\n\n                </Col>\n            </Row>\n            <Row>\n                <Col xs={6} md={4}>\n                    <h5>Load Forecast(MWh)</h5>\n                    <BarChart\n                        width={300}\n                        height={300}\n                        data={data}\n                        margin={{\n                            top: 20,\n                            right: 30,\n                            left: 0,\n                            bottom: 5\n                        }}\n                    >\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"name\" />\n\n                        <YAxis />\n                        <Tooltip />\n                        <Legend />\n                        <Bar dataKey=\"load\" name=\"Aggregated Load\" fill=\"#FFA114\">\n                            <LabelList dataKey=\"name\" content={renderCustomizedLabel} />\n\n                        </Bar>\n                        <Bar dataKey=\"generation\" name=\"RE Generation\" fill=\"#0C67CE\" >\n                            <LabelList dataKey=\"name\" content={renderCustomizedEvetLabel} />\n\n                        </Bar>\n                    </BarChart>\n                </Col>\n                <Col xs={12} md={8}>\n                    <LineChart\n                        width={600}\n                        height={300}\n                        data={energy_temp}\n                        margin={{\n                            top: 5,\n                            right: 30,\n                            left: 0,\n                            bottom: 5\n                        }}\n                    >\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"name\" height={60} tick={<CustomizedAxisTick />} />\n                        <YAxis />\n                        <Tooltip />\n                        <Legend />\n                        <Line type=\"monotone\" name=\"Total RE Generation\" dataKey=\"pv\" stroke=\"#8884d8\">\n                            <LabelList content={<CustomizedLabelNetLoad />} />\n                        </Line>\n                        <Line type=\"monotone\" name=\"Aggregate Load\" dataKey=\"uv\" stroke=\"#82ca9d\">\n                            <LabelList content={<CustomizedLabelNetLoad />} />\n                        </Line>\n                    </LineChart>\n                </Col>\n            </Row>\n\n        </>\n    )\n}\nexport default EnergyDemand;","import { Container, Row, Col, Card, CardGroup } from \"react-bootstrap\";\nimport { BsPeopleFill, BsFillLightningFill } from \"react-icons/bs\";\n\nconst EnergyResurces = () => {\n    return (\n        <>\n            <Container>\n                <Row>\n                    <Col>\n                    <CardGroup>\n                            <Card>\n                                <Card.Body>\n                                    <Card.Title>\n                                        <h2>Average Load Profile</h2>\n                                        <h4>Load Profile</h4>\n                                        <br />\n                                    </Card.Title>\n                                    <Card.Text>\n                                        <h1> <BsPeopleFill />  2550 </h1>\n                                        <h5> MWh, 5 min ago </h5>\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                        </CardGroup>\n                    </Col>\n                    <Col>\n                    <CardGroup>\n                            <Card>\n                                <Card.Body>\n                                    <Card.Title>\n                                        <h2>Total Generation</h2>\n                                        <h4>Total Generation</h4>\n                                        <br />\n                                    </Card.Title>\n                                    <Card.Text>\n                                        <h1> <BsFillLightningFill />  3200 </h1>\n                                        <h5> MWh, 5 min ago </h5>\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                        </CardGroup>\n                    </Col>\n                    <Col><CardGroup>\n                            <Card>\n                                <Card.Body>\n                                    <Card.Title>\n                                        <h2>Total Storage</h2>\n                                        <h4>Operational Storage</h4>\n                                        <br />\n                                    </Card.Title>\n                                    <Card.Text>\n                                        <h1> <BsFillLightningFill />  160 </h1>\n                                        <h5> MWh, 0 min ago </h5>\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                        </CardGroup></Col>\n                </Row>\n            </Container>\n        </>\n    )\n}\nexport default EnergyResurces;","import { useParams } from \"react-router-dom\";\nimport { ResponsiveContainer, LabelList, LineChart, ComposedChart, CartesianGrid, XAxis, YAxis, Bar, Tooltip, Legend, Line } from \"recharts\";\nimport { Row, Col, Card, CardGroup, Container } from \"react-bootstrap\";\nimport { BsFillGrid3X3GapFill, BsCaretUpFill } from \"react-icons/bs\";\nimport { ImScissors } from \"react-icons/im\";\nimport { FiHexagon } from \"react-icons/fi\";\nimport { BiTachometer } from \"react-icons/bi\";\nimport data from '../data/solarData'\n\n\nconst SolarDashboard = () => {\n    let { id } = useParams();\n    const performaceratio = [\n        {},\n        {\n            name: \"Feb\",\n            uv: 20,\n            pv: 14,\n        },\n        {\n            name: \"Mar\",\n            uv: 21,\n            pv: 24,\n        },\n        {\n            name: \"Apr\",\n            uv: 22,\n            pv: 26,\n        },\n        {\n            name: \"May\",\n            uv: 21,\n            pv: 29,\n        },\n        {\n            name: \"June\",\n            uv: 18,\n            pv: 28,\n        },\n        {\n            name: \"July\",\n            uv: 20,\n            pv: 26,\n        }, {\n            name: \"Aug\",\n            uv: 22,\n            pv: 22,\n        }, {\n            name: \"Sep\",\n            uv: 24,\n            pv: 24,\n        }, {\n\n        }\n    ];\n\n    const energy_temp = [\n        {\n            name: \"01:00\",\n            pv: 60,\n            uv: 0,\n        },\n        {\n            name: \"02:00\",\n            pv: 65,\n            uv: 0,\n        },\n        {\n            name: \"03:00\",\n            pv: 59,\n            uv: 0,\n        },\n        {\n            name: \"04:00\",\n            pv: 55,\n            uv: 500,\n        },\n        {\n            name: \"05:00\",\n            pv: 57,\n            uv: 600,\n        },\n        {\n            name: \"06:00\",\n            pv: 62,\n            uv: 700,\n        },\n        {\n            name: \"07:00\",\n            pv: 64,\n            uv: 750,\n        },\n        {\n            name: \"08:00\",\n            pv: 64,\n            uv: 750,\n\n        },\n        {\n            name: \"09:00\",\n            pv: 66,\n            uv: 760,\n        },\n        {\n            name: \"10:00\",\n            pv: 68,\n            uv: 789,\n        },\n        {\n            name: \"11:00\",\n            pv: 69,\n            uv: 840,\n        },\n        {\n            name: \"12:00\",\n            pv: 68,\n            uv: 780,\n        },\n        {\n            name: \"13:00\",\n            pv: 70,\n            uv: 800,\n        },\n        {\n            name: \"14:00\",\n            pv: 75,\n            uv: 800,\n\n        },\n        {\n            name: \"15:00\",\n            pv: 80,\n            uv: 700,\n        },\n        {\n\n        }\n    ];\n\n    const CustomizedLabel = (props) => {\n        const { x, y, stroke, value } = props;\n\n        return (\n            <text x={x} y={y} dy={-4} fill={stroke} fontSize={10} textAnchor=\"bottom\">\n                {value}\n            </text>\n        );\n    };\n\n    const renderCustomizedAV = (props) => {\n        const { x, y, width, value } = props;\n        return (\n            <g>\n                <circle cx={x + width / 2} cy={y} fill=\"black\" />\n                <text\n                    x={x + width / 2}\n                    y={y}\n                    fill=\"black\"\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"top\"\n                >\n                    {performaceratio.find((d) => d.name === value)?.pv}\n                </text>\n            </g>\n        );\n    };\n    const plant = data.filter(dataItem=>dataItem.id==id);\n\n  \n    return (\n        <>\n            <h5>PV Farm {plant[0].name} - Monitoring Dashboard</h5>\n            <Container>\n                <Row>\n                    <Col xs={4}>\n                        <CardGroup>\n                            <Card>\n                                <Card.Body>\n                                    <Card.Title><h2>Panel Info</h2></Card.Title>\n                                    <Card.Text>\n                                        <h6> Panel Id - PV 1344U </h6>\n                                        <br /><br />\n                                        <h2> <BsFillGrid3X3GapFill /> 290 <BsCaretUpFill /> </h2>\n                                        <h5>MW, Generation Capacity - {plant[0].capacity}</h5>\n                                    </Card.Text>\n                                </Card.Body>\n\n                            </Card>\n                        </CardGroup>\n                    </Col>\n                    <Col>\n                        <CardGroup>\n                            <Card>\n                                <Card.Body>\n                                    <Card.Title><h2>Disconnect PC System</h2></Card.Title>\n                                    <Card.Text>\n                                        <h4> Remotely managed PV </h4>\n                                        <h1> <BsFillGrid3X3GapFill /> </h1>\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                        </CardGroup>\n                    </Col>\n                    <Col >\n                        <CardGroup>\n                            <Card>\n                                <Card.Body>\n                                    <Card.Title><h2>PV Curtailment Current Month(MWh)</h2></Card.Title>\n                                    <Card.Text>\n                                        <h1> <ImScissors />560 </h1>\n                                        <h5> MWh, 5 mins ago </h5>\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                        </CardGroup>\n                    </Col>\n                    <Col>\n                        <CardGroup>\n                            <Card>\n                                <Card.Body>\n                                    <Card.Title><h2>PV Curtailment Year Till Date(MWh)</h2></Card.Title>\n                                    <Card.Text>\n                                        <h1> <ImScissors />4620 </h1>\n                                        <h5> MWh </h5>\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                        </CardGroup>\n                    </Col>\n                </Row>\n            </Container>\n            <Container>\n                <Row>\n                    <Col xs={6} md={4}>\n                        <iframe title=\"solarmap\" src={plant[0].location} width=\"350\" height=\"300\" allowfullscreen=\"\" loading=\"lazy\"></iframe>\n\n                    </Col>\n                    <Col xs={6} md={6}>\n                        <ResponsiveContainer width={\"100%\"} height={300}>\n                            <ComposedChart\n                                width={750}\n                                height={400}\n                                data={performaceratio}\n                                margin={{\n                                    top: 5,\n                                    right: 10,\n                                    left: 0,\n                                    bottom: 5\n                                }}\n                            >\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis dataKey=\"name\" height={60} />\n                                <YAxis />\n                                <Tooltip />\n                                <Legend />\n                                <Bar dataKey=\"pv\" name=\"Av Daily Performance Ration(PR)%\" barSize={15} fill=\"#005EB8\">\n                                    <LabelList dataKey=\"name\" content={renderCustomizedAV} />\n                                </Bar>\n                               \n                                <Line type=\"monotone\" name=\"Av Daily Ambient Temp\"\n                                     dataKey=\"uv\" stroke=\"#FF8C00\">\n                                    <LabelList content={<CustomizedLabel />} />\n                                </Line>\n                            </ComposedChart>\n                        </ResponsiveContainer>\n                    </Col>\n                    <Col xs={6} md={2}>\n                        <CardGroup>\n                            <Card>\n                                <Card.Body>\n                                    <Card.Title>\n                                        <h2>Total Energy(MWh)</h2>\n                                        <h5>Past 1 month</h5>\n                                    </Card.Title>\n                                    <Card.Text>\n                                        <h1> <FiHexagon />4620 </h1>\n                                        <h5> MWh, 5 min ago </h5>\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                        </CardGroup>\n                    </Col>\n\n                </Row>\n            </Container>\n            <Container>\n                <Row>\n                    <Col md={2}>\n                        <CardGroup>\n                            <Card>\n                                <Card.Body>\n                                    <Card.Title>\n                                        <h2>Last Energy Reading</h2>\n                                    </Card.Title>\n                                    <Card.Text>\n                                        <h1> <FiHexagon />34.1 </h1>\n                                        <h5> MWh, 5 min ago </h5>\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                        </CardGroup>\n                    </Col>\n                    <Col md={2}>\n                        <CardGroup>\n                            <Card>\n                                <Card.Body>\n                                    <Card.Title>\n                                        <h2>Total Energy(MWh)</h2>\n                                    </Card.Title>\n                                    <Card.Text>\n                                        <h1> <FiHexagon />260 </h1>\n                                        <h5> MWh, 5 min ago </h5>\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                        </CardGroup>\n                    </Col>\n                    <Col md={6}>\n                        <LineChart\n                            width={500}\n                            height={300}\n                            data={energy_temp}\n                            margin={{\n                                top: 5,\n                                right: 30,\n                                left: 20,\n                                bottom: 5\n                            }}\n                        >\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <XAxis dataKey=\"name\" />\n                            <YAxis yAxisId=\"left\" />\n                            <YAxis yAxisId=\"right\" orientation=\"right\" />\n                            <Tooltip />\n                            <Legend />\n                            <Line\n                                yAxisId=\"left\"\n                                name=\"Temperature\"\n                                type=\"monotone\"\n                                dataKey=\"pv\"\n                                stroke=\"#8884d8\"\n                                activeDot={{ r: 8 }}\n                            >\n                                <LabelList content={<CustomizedLabel />} />\n\n                            </Line>\n                            <Line yAxisId=\"right\" name=\"Power\" type=\"monotone\" dataKey=\"uv\" stroke=\"#FF8C00\">\n                                <LabelList content={<CustomizedLabel />} />\n\n                            </Line>\n\n                        </LineChart>\n\n                    </Col>\n                    <Col md={2}>\n                        <CardGroup>\n                            <Card>\n                                <Card.Body>\n                                    <Card.Title>\n                                        <h2>Device</h2>\n                                        <h3>Manage Device</h3>\n                                    </Card.Title>\n                                    <Card.Text>\n                                        <h1> <BiTachometer />5 </h1>\n                                        <h4> Connected Device </h4>\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                        </CardGroup>\n\n                    </Col>\n\n\n                </Row>\n            </Container>\n        </>\n    )\n}\nexport default SolarDashboard;","import { useParams } from \"react-router-dom\";\nimport { ResponsiveContainer, LabelList, LineChart, ComposedChart, CartesianGrid, XAxis, YAxis, Bar, Tooltip, Legend, Line } from \"recharts\";\nimport { Row, Col, Card, CardGroup, Container } from \"react-bootstrap\";\nimport { BsFillGrid3X3GapFill, BsCaretUpFill } from \"react-icons/bs\";\nimport { ImScissors } from \"react-icons/im\";\nimport { FiHexagon } from \"react-icons/fi\";\nimport { BiTachometer } from \"react-icons/bi\";\nimport data from '../data/windData'\n\n\nconst WindDashboard = () => {\n    let { id } = useParams();\n    const performaceratio = [\n        {},\n        {\n            name: \"Feb\",\n            uv: 20,\n            pv: 14,\n        },\n        {\n            name: \"Mar\",\n            uv: 21,\n            pv: 24,\n        },\n        {\n            name: \"Apr\",\n            uv: 22,\n            pv: 26,\n        },\n        {\n            name: \"May\",\n            uv: 21,\n            pv: 29,\n        },\n        {\n            name: \"June\",\n            uv: 18,\n            pv: 28,\n        },\n        {\n            name: \"July\",\n            uv: 20,\n            pv: 26,\n        }, {\n            name: \"Aug\",\n            uv: 22,\n            pv: 22,\n        }, {\n            name: \"Sep\",\n            uv: 24,\n            pv: 24,\n        }, {\n\n        }\n    ];\n\n    const energy_temp = [\n        {\n            name: \"01:00\",\n            pv: 60,\n            uv: 0,\n        },\n        {\n            name: \"02:00\",\n            pv: 65,\n            uv: 0,\n        },\n        {\n            name: \"03:00\",\n            pv: 59,\n            uv: 0,\n        },\n        {\n            name: \"04:00\",\n            pv: 55,\n            uv: 500,\n        },\n        {\n            name: \"05:00\",\n            pv: 57,\n            uv: 600,\n        },\n        {\n            name: \"06:00\",\n            pv: 62,\n            uv: 700,\n        },\n        {\n            name: \"07:00\",\n            pv: 64,\n            uv: 750,\n        },\n        {\n            name: \"08:00\",\n            pv: 64,\n            uv: 750,\n\n        },\n        {\n            name: \"09:00\",\n            pv: 66,\n            uv: 760,\n        },\n        {\n            name: \"10:00\",\n            pv: 68,\n            uv: 789,\n        },\n        {\n            name: \"11:00\",\n            pv: 69,\n            uv: 840,\n        },\n        {\n            name: \"12:00\",\n            pv: 68,\n            uv: 780,\n        },\n        {\n            name: \"13:00\",\n            pv: 70,\n            uv: 800,\n        },\n        {\n            name: \"14:00\",\n            pv: 75,\n            uv: 800,\n\n        },\n        {\n            name: \"15:00\",\n            pv: 80,\n            uv: 700,\n        },\n        {\n\n        }\n    ];\n\n    const CustomizedLabel = (props) => {\n        const { x, y, stroke, value } = props;\n\n        return (\n            <text x={x} y={y} dy={-4} fill={stroke} fontSize={10} textAnchor=\"bottom\">\n                {value}\n            </text>\n        );\n    };\n\n    const renderCustomizedAV = (props) => {\n        const { x, y, width, value } = props;\n        return (\n            <g>\n                <circle cx={x + width / 2} cy={y} fill=\"black\" />\n                <text\n                    x={x + width / 2}\n                    y={y}\n                    fill=\"black\"\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"top\"\n                >\n                    {performaceratio.find((d) => d.name === value)?.pv}\n                </text>\n            </g>\n        );\n    };\n\n    const plant = data.filter(dataItem=>dataItem.id==id);\n\n    return (\n        <>\n            <h5>PV Farm {plant[0].name} - Monitoring Dashboard</h5>\n            <Container>\n                <Row>\n                    <Col xs={4}>\n                        <CardGroup>\n                            <Card>\n                                <Card.Body>\n                                    <Card.Title><h2>Panel Info</h2></Card.Title>\n                                    <Card.Text>\n                                        <h6> Panel Id - PV 1344U </h6>\n                                        <br /><br />\n                                        <h2> <BsFillGrid3X3GapFill /> 290 <BsCaretUpFill /> </h2>\n                                        <h5>MW, Generation Capacity - {plant[0].capacity} </h5>\n                                    </Card.Text>\n                                </Card.Body>\n\n                            </Card>\n                        </CardGroup>\n                    </Col>\n                    <Col>\n                        <CardGroup>\n                            <Card>\n                                <Card.Body>\n                                    <Card.Title><h2>Disconnect PC System</h2></Card.Title>\n                                    <Card.Text>\n                                        <h4> Remotely managed PV </h4>\n                                        <h1> <BsFillGrid3X3GapFill /> </h1>\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                        </CardGroup>\n                    </Col>\n                    <Col >\n                        <CardGroup>\n                            <Card>\n                                <Card.Body>\n                                    <Card.Title><h2>PV Curtailment Current Month(MWh)</h2></Card.Title>\n                                    <Card.Text>\n                                        <h1> <ImScissors />560 </h1>\n                                        <h5> MWh, 5 mins ago </h5>\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                        </CardGroup>\n                    </Col>\n                    <Col>\n                        <CardGroup>\n                            <Card>\n                                <Card.Body>\n                                    <Card.Title><h2>PV Curtailment Year Till Date(MWh)</h2></Card.Title>\n                                    <Card.Text>\n                                        <h1> <ImScissors />4620 </h1>\n                                        <h5> MWh </h5>\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                        </CardGroup>\n                    </Col>\n                </Row>\n            </Container>\n            <Container>\n                <Row>\n                    <Col xs={6} md={5}>\n                        <iframe title=\"windmap\" src={plant[0].location} width=\"350\" height=\"300\" allowfullscreen=\"\" loading=\"lazy\"></iframe>\n\n                    </Col>\n                    <Col xs={6} md={5}>\n                        <ResponsiveContainer width={\"100%\"} height={300}>\n                            <ComposedChart\n                                width={650}\n                                height={400}\n                                data={performaceratio}\n                                margin={{\n                                    top: 5,\n                                    right: 10,\n                                    left: -10,\n                                    bottom: 5\n                                }}\n                            >\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis dataKey=\"name\" height={60} />\n                                <YAxis  />\n                             \n                                <Tooltip />\n                                <Legend />\n                                <Bar  dataKey=\"pv\" name=\"Av Daily Performance Ration(PR)%\" barSize={15} fill=\"#005EB8\">\n                                <LabelList dataKey=\"name\" content={renderCustomizedAV} />\n\n                                    </Bar>\n                                <Line\n                                    name=\"Av Daily Ambient Temp\"\n                                    type=\"monotone\"\n                                    dataKey=\"uv\"\n                                    fill=\"#FF8C00\"\n                                    stroke=\"#FF8C00\"\n                                >\n                                    <LabelList content={<CustomizedLabel />} />\n\n                                </Line>\n                            </ComposedChart>\n                        </ResponsiveContainer>\n                    </Col>\n                    <Col xs={6} md={2}>\n                        <CardGroup>\n                            <Card>\n                                <Card.Body>\n                                    <Card.Title>\n                                        <h2>Total Energy(MWh)</h2>\n                                        <h5>Past 1 month</h5>\n                                    </Card.Title>\n                                    <Card.Text>\n                                        <h1> <FiHexagon />4620 </h1>\n                                        <h5> MWh, 5 min ago </h5>\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                        </CardGroup>\n                    </Col>\n\n                </Row>\n            </Container>\n            <Container>\n                <Row>\n                    <Col md={2}>\n                        <CardGroup>\n                            <Card>\n                                <Card.Body>\n                                    <Card.Title>\n                                        <h2>Last Energy Reading</h2>\n                                    </Card.Title>\n                                    <Card.Text>\n                                        <h1> <FiHexagon />34.1 </h1>\n                                        <h5> MWh, 5 min ago </h5>\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                        </CardGroup>\n                    </Col>\n                    <Col md={2}>\n                        <CardGroup>\n                            <Card>\n                                <Card.Body>\n                                    <Card.Title>\n                                        <h2>Total Energy(MWh)</h2>\n                                    </Card.Title>\n                                    <Card.Text>\n                                        <h1> <FiHexagon />260 </h1>\n                                        <h5> MWh, 5 min ago </h5>\n                                    </Card.Text>\n                                             </Card.Body>\n                            </Card>\n                        </CardGroup>\n                    </Col>\n                    <Col md={6}>\n                        <LineChart\n                            width={500}\n                            height={300}\n                            data={energy_temp}\n                            margin={{\n                                top: 5,\n                                right: 30,\n                                left: 20,\n                                bottom: 5\n                            }}\n                        >\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <XAxis dataKey=\"name\" />\n                            <YAxis yAxisId=\"left\" />\n                            <YAxis yAxisId=\"right\" orientation=\"right\" />\n                            <Tooltip />\n                            <Legend />\n                            <Line\n                                yAxisId=\"left\"\n                                name=\"Temperature\"\n                                type=\"monotone\"\n                                dataKey=\"pv\"\n                                stroke=\"#8884d8\"\n                                activeDot={{ r: 8 }}\n                            >\n                                <LabelList content={<CustomizedLabel />} />\n\n                            </Line>\n                            <Line yAxisId=\"right\" name=\"Power\" type=\"monotone\" dataKey=\"uv\" stroke=\"#FF8C00\">\n                                <LabelList content={<CustomizedLabel />} />\n\n                            </Line>\n                        </LineChart>\n\n                    </Col>\n                    <Col md={2}>\n                        <CardGroup>\n                            <Card>\n                                <Card.Body>\n                                    <Card.Title>\n                                        <h2>Device</h2>\n                                        <h3>Manage Device</h3>\n                                    </Card.Title>\n                                    <Card.Text>\n                                        <h1> <BiTachometer />5 </h1>\n                                        <h4> Connected Device </h4>\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                        </CardGroup>\n\n                    </Col>\n\n\n                </Row>\n            </Container>\n        </>\n    )\n}\nexport default WindDashboard;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Row } from 'react-bootstrap';\nimport Header from './nav/Header'\nimport SolarForecast from './component/SolarForecast';\nimport MonitorSolar from './component/MonitorSoloar';\nimport WindForecast from './component/WindForecast';\nimport MonitorWind from './component/MonitorWind';\nimport Menupage from './nav/Menupage';\nimport EnergyDemand from './component/EnergyDemand';\nimport EnergyResurces from './component/EnergyResources';\nimport SolarDashboard from './component/SolarDashboard';\nimport WindDashboard from './component/WindDashboard';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col'\n\nReactDOM.render(\n  <React.StrictMode>\n   <Router>\n   <Header />\n   \n   <Container fluid>\n        <Row>\n        <Col xs={3} >\n      <Menupage />\n      </Col>\n        <Col  >\n          <Switch>\n            <Route exact path=\"/greenPower\" component={App} />\n            <Route path=\"/solarforecast\" component={SolarForecast} />\n            <Route path=\"/monitorsolar\" component={MonitorSolar} />\n            <Route path=\"/windforecast\" component={WindForecast} />\n            <Route path=\"/monitorwind\" component={MonitorWind} />\n            <Route path=\"/energydemand\" component={EnergyDemand} />\n            <Route path=\"/energyresources\" component={EnergyResurces} />\n            <Route path=\"/solardashboard/:id\" component={SolarDashboard} />\n            <Route path=\"/winddashboard/:id\" component={WindDashboard} />\n          </Switch>\n         </Col>\n        </Row>\n      </Container>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}